defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	crt-base /etc/letsencrypt/live
  lua-load /etc/haproxy/acme-http01-webroot.lua

#HTTP Frontend
frontend http-in
  bind *:80

	acl url_acme_http01 path_beg /.well-known/acme-challenge/
	http-request use-service lua.acme-http01 if METH_GET url_acme_http01

{{range gets "/*"}}
	{{$data := json .Value}}
	# define acl hosts {{.}}
	acl host_{{$data.name}} hdr(host) -i -m reg -- {{$data.domain}} 

	mode http
	# acl to backend
	use_backend cluster_{{$data.name}} if host_{{$data.name}}
{{end}}

# HTTPS Frontend
frontend https
	bind *:443 ssl crt /certs
{{range gets "/*"}}
	{{$data := json .Value}}
	# define acl hosts {{.}}
	acl host_{{$data.name}} hdr(host) -i -m reg -- {{$data.domain}} 
	mode http
	# acl to backend
	use_backend cluster_{{$data.name}} if host_{{$data.name}}
{{end}}



# define backend to be used
{{range gets "/*"}}
	{{$data := json .Value}}
backend cluster_{{$data.name}}
	balance leastconn
	option httpclose
	option forwardfor
	cookie JSESSIONID prefix

	server node_{{$data.name}} {{$data.backend}} cookie A check
{{end}}
