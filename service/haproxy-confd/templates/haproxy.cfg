defaults
	log	global
  default-server init-addr last,libc,none

global
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
 	maxconn 60000
	nosplice
	user haproxy
	group haproxy
	crt-base /etc/letsencrypt/live
  lua-load /etc/haproxy/acme-http01-webroot.lua

#### HTTP Frontend
frontend http-in
	mode	http
	
  timeout client  10000
	acl url_acme_http01 path_beg /.well-known/acme-challenge/
	http-request use-service lua.acme-http01 if METH_GET url_acme_http01

{{range gets "/vhost/http/*"}}
	{{$data := json .Value}}
  bind *:{{$data.port}}
	# define acl hosts {{.}}
	acl host_{{$data.name}} hdr_dom(host) -i -m reg -- {{$data.domain}} 

	mode http
	# acl to backend
	use_backend cluster_http_{{$data.name}} if host_{{$data.name}}
{{end}}

{{if exists "/usessl"}}
#### HTTPS Frontend
frontend https

	option	dontlognull
  timeout client  10000

{{range gets "/vhost/https/*"}}
	{{$data := json .Value}}
	bind *:{{$data.port}} ssl crt /certs
	# define acl hosts {{.}}
	acl host_{{$data.name}} hdr_dom(host) -i -m reg -- {{$data.domain}} 
	mode	http
	# acl to backend
	use_backend cluster_https_{{$data.name}} if host_{{$data.name}}
{{end}}
{{end}}



#### define http backend to be used
{{range gets "/vhost/http/*"}}
	{{$data := json .Value}}
backend cluster_http_{{$data.name}}
	balance leastconn
	option httpclose
	option forwardfor
	option	httplog
	mode http
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

	timeout connect  5s
  timeout server   1m

	cookie JSESSIONID prefix

	server http_node_{{$data.name}} {{$data.backend}} cookie A check
{{end}}

#### define http backend to be used
{{range gets "/vhost/https/*"}}
	{{$data := json .Value}}
backend cluster_https_{{$data.name}}
	balance leastconn
	option httpclose
	option forwardfor
	option	httplog
	mode http
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

	timeout connect  5s
  timeout server   1m

	cookie JSESSIONID prefix

	server https_node_{{$data.name}} {{$data.backend}} cookie A check
{{end}}



### MISC 
{{range gets "/forward/*"}}
{{$data := json .Value}}
frontend {{$data.name}}-in
  bind *:{{$data.port}}
	mode tcp
	default_backend cluster_tcp_{{$data.name}}
  timeout client 24h
  option clitcpka

backend cluster_tcp_{{$data.name}}
	log global
	timeout connect  5s
  timeout server  1m
	balance leastconn
	option independant-streams
	option redispatch
  option tcplog
  option tcpka
  option srvtcpka
	server tcp_node_{{$data.name}} {{$data.backend}}
{{end}}



